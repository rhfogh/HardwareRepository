<object class="GphlWorkflow">

    <!-- Characterisation beamline energy in keV -->
    <!-- For now hardwired in instrumentation.nml file  - this is jsut a reflection-->
    <characterisation_energy>12.7</characterisation_energy>

    <!-- Global phasing installation directory -->
    <!-- os.path.joined with individual gphl_program_locations (below)-->
    <gphl_installation_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64/autoPROC/bin/linux64/</gphl_installation_dir>
    <!--<gphl_installation_dir>/MXCuBE/softwares/GPhL-ESRF-20171005/20171005/bin/linux64/</gphl_installation_dir>-->

    <!--&lt;!&ndash; Timeout before workflow application execution is aborted&ndash;&gt;-->
    <!--<execution_timeout>3600</execution_timeout>-->
    <!-- Subdirectory under Session.get_process_directory() for GPhL persistence data-->
    <gphl_subdir>GPHL</gphl_subdir>
    <!-- Java binary to execute for workflow application -->
    <java_binary>/MXCuBE/gphl_java/bin/java</java_binary>
    <!-- GPHL configuration subdirectory
         (will be searched for in HardwareObjects config xml directories-->
    <gphl_config_subdir>gphl_config/esrf-id30b</gphl_config_subdir>

    <!-- Rotation axis role names, space separated, in out-to-in order. -->
    <!-- Must match Instrunmentation.nml config file NB modify for beamline -->
    <rotation_axis_roles>phi kappa kappa_phi</rotation_axis_roles>
    <!-- Translation axis role names, space separated. -->
    <!-- Must match Instrunmentation.nml config file NB modify for beamline -->
    <translation_axis_roles>phiy sampy sampx</translation_axis_roles>

    <!-- Hosts and ports for py4j java-python gateway, all OPTIONAL-->
    <!-- If not set will use py4j default values, which are as given below-->
    <connection_parameters>
        <python_address>127.0.0.1</python_address>
        <python_port>25334</python_port>
        <java_address>127.0.0.1</java_address>
        <java_port>25333</java_port>
    </connection_parameters>

    <!-- Parameters for the command-line invocation of the workflow application-->
    <!-- Java invocation properties - syntax is e.g. '-Dfile.encoding=UTF-8' -->
    <invocation_properties>
        <file.encoding>UTF-8</file.encoding>
    </invocation_properties>
    <!-- Command invocation options, shared by all commands -->
    <!-- Syntax is e.g. '-cp "/home/rhfogh/scratch/sources/eclipse/wf5/*"' -->
    <invocation_options>
        <!-- Java classpath. -->
        <!--Should point to all contents of workflow application directory-->
        <cp>/MXCuBE/gphl_java_classes/*</cp>
    </invocation_options>

    <!-- Location of global phasing programs relative to installation directory -->
    <gphl_program_locations>
        <!-- Location of GPhL .license directory -->
        <co.gphl.wf.bdg_licence_dir>/MXCuBE/gphl_java_classes</co.gphl.wf.bdg_licence_dir>
        <!--<co.gphl.wf.bdg_licence_dir>/MXCuBE/softwares/GPhL-ESRF-20171005/20171005</co.gphl.wf.bdg_licence_dir>-->
        <!-- Location of stratcal binary -->
        <co.gphl.wf.stratcal.bin>stratcal</co.gphl.wf.stratcal.bin>
        <!-- Location of stratcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.stratcal.bdg_licence_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->
        <!-- Location of simcal binaries -->
        <co.gphl.wf.simcal.bin>simcal</co.gphl.wf.simcal.bin>
        <co.gphl.wf.simcal_predict.bin>simcal_predict</co.gphl.wf.simcal_predict.bin>
        <!-- Location of simcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.simcal_predict.bdg_licence_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->
        <!-- Location of transcal binary -->
        <co.gphl.wf.transcal.bin>transcal</co.gphl.wf.transcal.bin>
        <!-- Location of recen binary -->
        <co.gphl.wf.recen.bin>recen</co.gphl.wf.recen.bin>
        <!-- Path of application that analyses diffractcal (aka rotational
        calibration) data. In practice, this will almost always be a wrapper
        script that sets up the environment properly. -->
        <co.gphl.wf.diffractcal.bin>path/to/diffractcal</co.gphl.wf.diffractcal.bin>
    </gphl_program_locations>

    <!-- Properties common to workflows - syntax e.g. '-Dfile.encoding=UTF-8'-->
    <!-- Syntax as for invocation properties, but located differently-->
    <workflow_properties>
        <!-- Location of XDS binary -->
        <co.gphl.sdcp.xdsbin>/MXCuBE/softwares/Xds/XDS-INTEL64_Linux_x86_64/xds_par</co.gphl.sdcp.xdsbin>
        <!-- NB the following should be moving away, to a simcal-specific setup file -->
        <!-- Dummy sample properties: choose values for these to make the
        predictions for the characterisation strategy look reasonable (they
        have no scientific basis, and are not used for any scientific purpose). -->
        <co.gphl.wf.simcal_predict.b_wilson>26.0</co.gphl.wf.simcal_predict.b_wilson>
        <co.gphl.wf.simcal_predict.cell_dim_sd_scale>1.5e-3</co.gphl.wf.simcal_predict.cell_dim_sd_scale>
        <co.gphl.wf.simcal_predict.mosaicity>0.2</co.gphl.wf.simcal_predict.mosaicity>
        <!-- Uncomment this to disable stratcal's collision checking ->
        <co.gphl.wf.stratcal.collision_mode>2</co.gphl.wf.stratcal.collision_mode>
        -->
    </workflow_properties>

    <!--  Workflow options common to all workflows - can be overridden for individual workflows-->
    <workflow_options>
        <!-- URL for beamline connection, as seen from the workflow application -->
        <beamline>py4j::</beamline>
        <!-- Location of persistence layer (workflow application data files -->
        <!-- The main data file is : -->
        <!-- Session.get_process_directory()/<gphl_subdir>/<persist.xml -->
        <persistname>persistence</persistname>
        <!-- Workflow enactment prefix  OPTIONAL - if set to e.g. 'wfx', data
        for successive workflow runs will be stored in 'wfx_1, ,wfx_2, ... -->
        <wfprefix>gphl_wf_</wfprefix>
    </workflow_options>

    <!-- List of supported workflows, with options for each -->
    <workflows>
        <TranslationalCalibration>
            <application>co.gphl.wf.workflows.WFTransCal</application>
            <strategy_type>transcal</strategy_type>
            <documentation>Translational calibration.
                Designed for use by beamline personnel.
                Will produce a series of goniostat positions compatible with
                the inbuilt collision checker, move the goniostat to each
                position, and ask for centring.
            </documentation>
            <options>
                <!-- Name for translation calibration output -->
                <calibration>transcal</calibration>
                <!-- file: File containing settings of rotation axes for calibration -->
                <!-- The name is the relative path from the Repository directory -->
                <!-- grid: Grid definition [axis_name:start:end:step], slowest-varying to fastest varying -->
                <!-- EITHER file OR grid must be set. NBNB REDO! -->
                <file>gphl_config/esrf-id30b/transcal_2stage.json</file>
                <!-- copy calibration result to configuration directory, replacing previous value -->
                <newconfig/>
                <!-- updateconfig option, automaticallly updates entire configuration -->
                <!--<grid>grid_axes_spec</grid>-->
                <!-- Path of file to dump persisted instrumentation configuration. OPTIONAL-->
                <instcfgout>/MXCuBE/mxcube/gphl_transcal_out.nml</instcfgout>
            </options>
        </TranslationalCalibration>

        <DiffractometerCalibration>
            <application>co.gphl.wf.workflows.WFDiffractCal</application>
            <strategy_type>diffractcal</strategy_type>
            <documentation>Diffractometer calibration.
                Designed for use by beamline personnel.
            </documentation>
            <!-- Default wavelengths (in A) and their roles -->
            <options>
                <!-- Name of initial strategy from library to use -->
                <!-- <strategy>DiffractCal</strategy> -->
                <strategy>DiffractCal_ex</strategy>
                <!-- Name for diffractometer calibration output -->
                <calibration>diffractcal</calibration>
                <!-- Path of file to dump persisted instrumentation configuration. OPTIONAL-->
                <instcfgout>/MXCuBE/mxcube/gphl_diffractcal_out.nml</instcfgout>
                <!-- Pattern name for characterisation collections - used for all data here-->
                <charpattern>multiorientation</charpattern>
                <!-- copy calibration result to configuration directory, replacing previous value -->
                <newconfig/>
            </options>
        </DiffractometerCalibration>

        <SingleWavelengthAcquisition>
            <application>co.gphl.wf.workflows.WFSimpleCharToProcessing</application>
            <strategy_type>acquisition</strategy_type>
            <documentation>
                Single wavelength data acquisition.
                Includes initial characterisation and complete collection
            </documentation>
            <!-- Default wavelengths (in A) and their roles -->
            <beam_energies>
                <beam_energy>
                    <role>Acquisition</role>
                    <!-- beamline energies in keV -->
                    <value>12.7</value>
                </beam_energy>
            </beam_energies>
            <options>
                <!-- Name of initial strategy from library to use -->
                <strategy>InitialCharacterisation</strategy>
                <!-- Working subdirectory for workflow-side application data-->
                <appdir>calculations</appdir>
                <!-- Pattern name for inverse-beam collections -->
                <ibpattern>ib_interleaved</ibpattern>
                <!-- Pattern name for non-inverse-beam collections -->
                <pattern>interleaved</pattern>
                <!-- NBNB replace later -->
                <!-- Pattern name for characterisation collections -->
                <charpattern>generic</charpattern>
                <!-- Default prefix - will be overwritten from user input -->
                <prefix>gphl_data</prefix>
            </options>
        </SingleWavelengthAcquisition>

        <TwoWavelengthMAD>
            <application>co.gphl.wf.workflows.WFSimpleCharToProcessing</application>
            <strategy_type>acquisition</strategy_type>
            <documentation>
                Two-wavelength MAD data acquisition.
                Includes initial characterisation and complete collection
            </documentation>
            <!-- Default wavelengths (in A) and their roles -->
            <beam_energies>
                <beam_energy>
                    <role>Peak</role>
                    <!-- beamline energies in keV -->
                    <value>12.7</value>
                </beam_energy>
                <beam_energy>
                    <role>Remote</role>
                    <!-- beamline energies in keV -->
                    <value>12.72</value>
                </beam_energy>
            </beam_energies>
            <options>
                <!-- Name of initial strategy from library to use -->
                <strategy>InitialCharacterisation</strategy>
                <!-- Working subdirectory for workflow-side application data-->
                <appdir>calculations</appdir>
                <!-- Pattern name for inverse-beam collections -->
                <ibpattern>ib_interleaved</ibpattern>
                <!-- Pattern name for non-inverse-beam collections -->
                <pattern>interleaved</pattern>
                <!-- NBNB replace later -->
                <!-- Pattern name for characterisation collections -->
                <charpattern>generic</charpattern>
                <!-- Default prefix - will be overwritten from user input -->
                <prefix>gphl_data</prefix>
            </options>
        </TwoWavelengthMAD>

        <ThreeWavelengthMAD>
            <application>co.gphl.wf.workflows.WFSimpleCharToProcessing</application>
            <strategy_type>acquisition</strategy_type>
            <documentation>
                Three-wavelength MAD data acquisition.
                Includes initial characterisation and complete collection
            </documentation>
            <!-- Default wavelengths (in A) and their roles -->
            <beam_energies>
                <beam_energy>
                    <role>Peak</role>
                    <!-- beamline energies in keV -->
                    <value>12.7</value>
                </beam_energy>
                <beam_energy>
                    <role>Rising_Inflection</role>
                    <!-- beamline energies in keV -->
                    <value>12.69</value>
                </beam_energy>
                <beam_energy>
                    <role>Falling_Inflection</role>
                    <!-- beamline energies in keV -->
                    <value>12.71</value>
                </beam_energy>
            </beam_energies>
            <options>
                <!-- Name of initial strategy from library to use -->
                <strategy>InitialCharacterisation</strategy>
                <!-- Working subdirectory for workflow-side application data-->
                <appdir>calculations</appdir>
                <!-- Pattern name for inverse-beam collections -->
                <ibpattern>ib_interleaved</ibpattern>
                <!-- Pattern name for non-inverse-beam collections -->
                <pattern>interleaved</pattern>
                <!-- NBNB replace later -->
                <!-- Pattern name for characterisation collections -->
                <charpattern>generic</charpattern>
                <!-- Default prefix - will be overwritten from user input -->
                <prefix>gphl_data</prefix>
            </options>
        </ThreeWavelengthMAD>
    </workflows>
</object>
