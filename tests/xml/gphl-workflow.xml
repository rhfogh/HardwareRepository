<object class="GphlWorkflow">

    <!-- Timeout before workflow application execution is aborted-->
    <execution_timeout>3600</execution_timeout>
    <!-- Subdirectory under Session.get_process_directory() for GPhL persistence data-->
    <gphl_subdir>GPHL</gphl_subdir>
    <!-- Java binary to execute for workflow application -->
    <java_binary>/MXCuBE/gphl_java/bin/java</java_binary>
    <!-- GPHL configuration subdirectory
         (will be searched for in HardwareObjects config xml directories-->
    <gphl_config_subdir>gphl_config</gphl_config_subdir>

    <!-- Rotation axis role names, space separated, in out-to-in order. -->
    <!-- Must match Instrunmentation.nml config file NB modify for beamline -->
    <rotation_axis_roles>phi kappa kappa_phi</rotation_axis_roles>
    <!-- Translation axis role names, space separated. -->
    <!-- Must match Instrunmentation.nml config file NB modify for beamline -->
    <translation_axis_roles>sampx sampy phiy</translation_axis_roles>

    <!-- Hosts and ports for py4j java-python gateway, all OPTIONAL-->
    <!-- If not set will use py4j default values, which are as given below-->
    <connection_parameters>
        <python_address>127.0.0.1</python_address>
        <python_port>25334</python_port>
        <java_address>127.0.0.1</java_address>
        <java_port>25333</java_port>
    </connection_parameters>

    <!-- Parameters for the command-line invocation of the workflow application-->
    <!-- Java invocation properties - syntax is e.g. '-Dfile.encoding=UTF-8' -->
    <invocation_properties>
        <file.encoding>UTF-8</file.encoding>
    </invocation_properties>
    <!-- Command invocation options, shared by all commands -->
    <!-- Syntax is e.g. '-cp "/home/rhfogh/scratch/sources/eclipse/wf5/*"' -->
    <invocation_options>
        <!-- Java classpath. -->
        <!--Should point to all contents of workflow application directory-->
        <cp>/MXCuBE/gphl_java_classes/*</cp>
    </invocation_options>

    <!-- Properties common to workflows - syntax e.g. '-Dfile.encoding=UTF-8'-->
    <!-- Syntax as for invocation properties, but located differently-->
    <workflow_properties>
        <!-- Location of XDS binary -->
        <co.gphl.sdcp.xdsbin>/MXCuBE/softwares/Xds/XDS-INTEL64_Linux_x86_64/xds_par</co.gphl.sdcp.xdsbin>
        <!-- Location of GPhL .license directory -->
        <!--<co.gphl.wf.bdg_licence_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64</co.gphl.wf.bdg_licence_dir>-->
        <co.gphl.wf.bdg_licence_dir>/MXCuBE/gphl_java_classes/licenses</co.gphl.wf.bdg_licence_dir>
        <!-- Location of stratcal binary -->
        <co.gphl.wf.stratcal.bin>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64/autoPROC/bin/linux64/stratcal</co.gphl.wf.stratcal.bin>
        <!-- Location of stratcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.stratcal.bdg_licence_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->
        <!-- Location of simcal binary -->
        <co.gphl.wf.simcal_predict.bin>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64/autoPROC/bin/linux64/simcal_predict</co.gphl.wf.simcal_predict.bin>
        <!-- Location of simcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.simcal_predict.bdg_licence_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->
        <!-- Location of transcal binary -->
        <co.gphl.wf.transcal.bin>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64/autoPROC/bin/linux64/transcal</co.gphl.wf.transcal.bin>
        <!-- Location of recen binary -->
        <co.gphl.wf.recen.bin>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64/autoPROC/bin/linux64/recen</co.gphl.wf.recen.bin>
        <!-- Path of application that analyses diffractcal (aka rotational
        calibration) data. In practice, this will almost always be a wrapper
        script that sets up the environment properly. -->
        <co.gphl.wf.diffractcal.bin>path/to/diffractcal</co.gphl.wf.diffractcal.bin>
        <!-- Dummy sample properties: choose values for these to make the
        predictions for the characterisation strategy look reasonable (they
        have no scientific basis, and are not used for any scientific purpose). -->
        <co.gphl.wf.simcal_predict.b_wilson>26.0</co.gphl.wf.simcal_predict.b_wilson>
        <co.gphl.wf.simcal_predict.cell_dim_sd_scale>1.5e-3</co.gphl.wf.simcal_predict.cell_dim_sd_scale>
        <co.gphl.wf.simcal_predict.mosaicity>0.2</co.gphl.wf.simcal_predict.mosaicity>
        <!-- Uncomment this to disable stratcal's collision checking ->
        <co.gphl.wf.stratcal.collision_mode>2</co.gphl.wf.stratcal.collision_mode>
        -->
    </workflow_properties>

    <!--  Workflow options common to all workflows - can be overridden for individual workflows-->
    <workflow_options>
        <!-- URL for beamline connection, as seen from the workflow application -->
        <beamline>py4j::</beamline>
        <!-- Location of persistence layer (workflow application data files -->
        <!-- The main data file is : -->
        <!-- Session.get_process_directory()/<gphl_subdir>/<persist.xml -->
        <persistname>persistence</persistname>
        <!-- Workflow enactment prefix  OPTIONAL - if set to e.g. 'wfx', data
        for successive workflow runs will be stored in 'wfx_1, ,wfx_2, ... -->
        <wfprefix>gphl_wf_</wfprefix>
    </workflow_options>

    <!-- List of supported workflows, with options for each -->
    <workflows>
        <TranslationalCalibrationTest>
            <application>co.gphl.wf.workflows.WFTransCal</application>
            <documentation>Translational calibration.
                Designed for use by beamline personnel.
                Will produce a series of goniostat positions compatible with
                the inbuilt collision checker, move the goniostat to each
                position, and ask for centring.
            </documentation>
            <options>
                <!-- Name for translation calibration output -->
                <calibration>transcal_result</calibration>
                <!-- file: File containing settings of rotation axes for calibration -->
                <!-- The name is the relative apth from the Repository directory -->
                <!-- grid: Grid definition [axis_name:start:end:step], slowest-varying to fastest varying -->
                <!-- EITHER file OR grid must be set. NBNB REDO! -->
                <file>gphl_config/TransCalTest.inp</file>
                <!--<grid>grid_axes_spec</grid>-->
                <!-- Path of file to dump persisted instrumentation configuration. OPTIONAL-->
                <instcfgout>/MXCuBE/mxcube/gphl_transcal_out.nml</instcfgout>
            </options>
        </TranslationalCalibrationTest>

        <DiffractometerCalibration>
            <application>co.gphl.wf.workflows.WFDiffractCal</application>
            <documentation>Diffractometer calibration.
                Designed for use by beamline personnel.
            </documentation>
            <options>
                <!-- Name of initial strategy from library to use -->
                <strategy>InitialCharacterisation</strategy>
                <!-- Name for diffractometer calibration output -->
                <calibration>diffractcal_result</calibration>
                <!--&lt;!&ndash; Path of file to dump persisted instrumentation configuration. OPTIONAL&ndash;&gt;-->
                <!--<instcfgout>-->
                    <!--/home/rhfogh/scratch/working/workflows/gphl21/transcal_dump-->
                <!--</instcfgout>-->
                <!-- NBNB replace later -->
                <charpattern>generic</charpattern>
            </options>
        </DiffractometerCalibration>

        <DataCollection1>
            <application>co.gphl.wf.workflows.WFSimpleCharToProcessing</application>
            <documentation>
                Data collection workflow 1.
                Includes initial characterisation and complete collection
            </documentation>
            <options>
                <!-- Name of initial strategy from library to use -->
                <strategy>InitialCharacterisation</strategy>
                <!-- Working subdirectory for workflow-side application data-->
                <appdir>calculations</appdir>
                <!-- Pattern name for inverse-beam collections -->
                <ibpattern>ib_interleaved</ibpattern>
                <!-- Pattern name for non-inverse-beam collections -->
                <pattern>interleaved</pattern>
                <!-- NBNB replace later -->
                <!-- Pattern name for characterisation collections -->
                <charpattern>generic</charpattern>
            </options>
        </DataCollection1>
    </workflows>
</object>
