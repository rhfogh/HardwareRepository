<object class="GphlWorkflowConnection">

    <!-- Location of Java binary to execute for workflow application -->
    <java_binary>/sware/pub/java-1.8.0_91/linux_x64/bin/java</java_binary>

    <!-- Location of executable XDS binary -->
    <co.gphl.wf.xds.bin>/opt/pxsoft/bin/xds_par</co.gphl.wf.xds.bin>

    <!-- Gphl workflow Java classpath. -->
    <!--Should point to all contents of workflow application directory-->
    <gphl_java_classpath>/users/blissadm/local/gphl/gphl_java_classes/*</gphl_java_classpath>

    <!-- Global phasing installation directory -->
    <!-- os.path.joined with individual gphl_program_locations (below). Top version if you run setup.sh, bottom if you do not-->
    <!-- <gphl_installation_dir>/users/blissadm/local/gphl/gphl_latest/exe/</gphl_installation_dir> -->
    <co.gphl.wf.bin>/users/blissadm/local/gphl/gphl_latest/latest/autoPROC/bin/linux64/</co.gphl.wf.bin>
    <!--<gphl_installation_dir>/MXCuBE/softwares/GPhL-ESRF-20171005/20171005/bin/linux64/</gphl_installation_dir>-->
    
    <!-- Location of GPhL .license directory -->
    <!-- Only needed if you do NOT use the wrapper script : -->
    <co.gphl.wf.bdg_licence_dir>/users/blissadm/local/gphl/gphl_latest/latest</co.gphl.wf.bdg_licence_dir>
    <!--<co.gphl.wf.bdg_licence_dir>/MXCuBE/softwares/GPhL-ESRF-20171005/20171005</co.gphl.wf.bdg_licence_dir>-->
    
    <!-- Redirection of workflow runner (java) output for debug purposes -->
    <gphl_wf_redirected_out>/users/blissadm/local/gphl/gphl_java_wf_redirect.out</gphl_wf_redirected_out>
    
    <!-- Location of installation used for processing queue (not reqchable from BCS computer. -->
    <!-- Passed as environmental variable GPHL_PROC_INSTALLATION -->
    <gphl_wf_processing_installation>/users/pkeller/GPhL-ESRF/exe</gphl_wf_processing_installation>

    <!-- Location of global phasing programs relative to installation directory -->
    <gphl_program_locations>
        <!-- Location of stratcal binary -->
        <!-- NB changed, assuming that we want teh stratcal wrapper,
        AND that it lives in the same directory as the binaries -->
        <co.gphl.wf.stratcal.bin>stratcal_wrap.py</co.gphl.wf.stratcal.bin>
        <!-- Location of stratcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.stratcal.bdg_licence_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->
        <!-- Location of simcal binaries -->
        <!-- <co.gphl.wf.simcal.bin>simcal</co.gphl.wf.simcal.bin> -->
        <!-- <co.gphl.wf.simcal_predict.bin>simcal_predict</co.gphl.wf.simcal_predict.bin> -->
        <!-- Location of simcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.simcal_predict.bdg_licence_dir>/MXCuBE/softwares/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->
        <!-- Location of transcal binary -->
        <!-- <co.gphl.wf.transcal.bin>transcal</co.gphl.wf.transcal.bin> -->
        <!-- Location of recen binary -->
        <!-- <co.gphl.wf.recen.bin>recen</co.gphl.wf.recen.bin> -->
        <!-- Path of application that analyses diffractcal (aka rotational
        calibration) data. In practice, this will almost always be a wrapper
        script that sets up the environment properly. -->
        <co.gphl.wf.diffractcal.bin>/users/blissadm/local/bin/gphl_diffractcal_submit</co.gphl.wf.diffractcal.bin>
        <!-- Path of application that processes acquired data. In practice, this will likely be a wrapper
        script that sets up the environment properly (or you would not need to set it) -->
        <co.gphl.wf.process.bin>/users/blissadm/local/bin/gphl_process_submit</co.gphl.wf.process.bin>
    </gphl_program_locations>

    <!-- Hosts and ports for py4j java-python gateway, all OPTIONAL-->
    <!-- If not set will use py4j default values, which are as given below-->
    <!--<connection_parameters>-->
        <!--<python_address>127.0.0.1</python_address>-->
        <!--<python_port>25334</python_port>-->
        <!--<java_address>127.0.0.1</java_address>-->
        <!--<java_port>25333</java_port>-->
    <!--</connection_parameters>-->

</object>
